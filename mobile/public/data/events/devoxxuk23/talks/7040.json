{
  "language": "EN",
  "format": {
    "title": "Tools-in-Action",
    "duration": "PT30m",
    "id": "957"
  },
  "track": {
    "id": "1701",
    "title": "Dev Craft"
  },
  "summary": "",
  "title": "Property-based testing - let your testing library work for you",
  "id": "7040",
  "description": "<p>Don't ask what you can do for your testing library, ask what it can do for you! So what can it do? It turns out that much more than displaying a nice green and red report. What if we make the library generate the test data? And while we're at it, maybe it could also think of the edge cases for which our code is wrong? Oh, and when it finds them, it should simplify them a bit before returning to us, so that we can quickly identify the root cause of the problem. And repeat that a thousand times, just to be sure. Sounds good? That's exactly what property-based testing has to offer. I'll show how to get started with this kind of testing, using jqwik (<a href=\"https://jqwik.net/\" rel=\"noopener noreferrer\" target=\"_blank\">https://jqwik.net/</a>) as an example. But isn't it all too good to be true, surely there's some fine print? Of course there is. I'll cover that as well.</p>",
  "speakers": [
    {
      "photoUrl": "https://devoxxian-image-thumbnails.s3-eu-west-1.amazonaws.com/profile-59515d0b-1af6-401a-9939-47dbf1955b08.jpg",
      "companyName": "SoftwareMill",
      "id": "6780",
      "fullName": "Magda Sto≈ºek"
    }
  ],
  "room": {
    "id": "19152",
    "title": "Auditorium"
  }
}