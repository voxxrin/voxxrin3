{
  "room": {
    "title": "Gallery Hall",
    "id": "19151"
  },
  "language": "EN",
  "speakers": [
    {
      "fullName": "Jos√© Paumard",
      "photoUrl": "https://devoxxian-image-thumbnails.s3-eu-west-1.amazonaws.com/profile-998d8692-f9bd-4004-915c-095633ba7303.jpg",
      "companyName": "Oracle",
      "id": "4702"
    }
  ],
  "id": "11322",
  "description": "<p>Loom brought two preview features in Java 19: virtual threads and structured concurrency. Virtual threads are a new model of thread, compatible with the current platform threads, but much lighter. You can easily launch million of virtual threads on a machine that would only support several thousands of plaform thread. Structured concurrency leverages this feature to write asynchronous code in very easy way. It is built on an imperative mono-thread programming model, built on top of virtual threads. These elements have been updated in Java 20. Java 20 has a third preview feature delivered by the Loom project: a new model for ThreadLocal variables called ScopedValues that is meant to work with virtual threads. This presentation shows you how all this is working, the new pattern you will be able to use for your asynchronous systems, and the performance you may expect.</p>",
  "summary": "",
  "track": {
    "id": "2754",
    "title": "Java"
  },
  "format": {
    "duration": "PT50m",
    "title": "Conference",
    "id": "951"
  },
  "title": "Concurrent and Asynchronous Programming : state of Loom in Java 20 and 21"
}