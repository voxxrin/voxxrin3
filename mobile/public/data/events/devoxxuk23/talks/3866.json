{
  "title": "Distributed patterns compared: Frameworks vs. K8s vs. Service Mesh vs. eBPF",
  "track": {
    "title": "Architecture",
    "id": "1251"
  },
  "id": "3866",
  "room": {
    "title": "Room D",
    "id": "19155"
  },
  "summary": "",
  "description": "<p>Software Development based on a distributed (microservice) architecture provides both several advantages and new challenges. In order to take advantage of the distribution it requires implementation of service discovery, routing, load-balancing, resilience mechanisms and more.</p><p><br></p><p>Java frameworks like Micronaut, Quarkus or Spring Boot provide dedicated implementations for API Gateways, Service Registries, Circuit Breakers and many more. These functionalities are declared as code dependencies and need to be set at build time.</p><p><br></p><p>If the architecture is running on top of Kubernetes many of those features are provided out-of-the-box independent of the application. So-called service mesh implementations extend the Kubernetes functionality for getting more insights and control over the underlying network. A fairly new approach is emerging with the eBPF technology, which claims to enable service meshes with minimal overhead.</p><p><br></p><p>With this talk I want to compare the approaches to figure out if one, the other or a combination of them might make sense. The talk is split into a theoretical and a live-demo part.</p>",
  "format": {
    "title": "Conference",
    "duration": "PT50m",
    "id": "951"
  },
  "speakers": [
    {
      "companyName": "VMware",
      "fullName": "Tiffany Jernigan",
      "id": "8787",
      "photoUrl": "https://lh3.googleusercontent.com/a/AEdFTp52yVfvTh6gCbESro_xzRzb1ZPNUKL1Ho9-vNmEcm0=s96-c"
    },
    {
      "photoUrl": "https://devoxxian-image-thumbnails.s3-eu-west-1.amazonaws.com/profile-48c9a90b-2bdf-4e01-9d85-32ff8532c483.jpg",
      "companyName": "Novatec Consulting GmbH",
      "id": "3639",
      "fullName": "Matthias Haeussler"
    }
  ],
  "language": "EN"
}