{
  "speakers": [
    {
      "photoUrl": "https://devoxxian-image-thumbnails.s3-eu-west-1.amazonaws.com/profile-894c1781-d8c3-4fc6-bcd8-d53e678f3a7e.jpg",
      "id": "14902",
      "fullName": "Deepu K Sasidharan",
      "companyName": "Okta"
    }
  ],
  "room": {
    "id": "4710",
    "title": "Room 5"
  },
  "title": "What the heck is Project Loom and what can a normal Java developer expect from it?",
  "description": "<p>You may have heard the words Project Loom, Fibers, Structured concurrency, and Virtual threads from Java enthusiasts. But what exactly are these, and what is the current state of concurrency in Java? can Java keep up with languages like Go and Rust when it comes to fearless concurrency? Let's be honest, concurrency in java is not among the easiest to master, and thread safety is even more difficult to get right. Can Project loom help to make it easier and less idiot-proof? In this session, I'll do a deep dive into Project loom and explain the different features in the work, look at the current state, and compare it with what we have today with some samples. We will also look into it from the aspect of what a normally Java developer can expect/benefit from it. So come join me for an exciting ride.</p>",
  "language": "EN",
  "summary": "",
  "track": {
    "id": "2754",
    "title": "Java"
  },
  "format": {
    "id": "951",
    "duration": "PT50m",
    "title": "Conference"
  },
  "id": "14956"
}