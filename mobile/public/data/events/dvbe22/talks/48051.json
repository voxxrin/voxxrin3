{
  "summary": "",
  "format": {
    "id": "959",
    "title": "Deep Dive",
    "duration": "PT180m"
  },
  "track": {
    "id": "2754",
    "title": "Java"
  },
  "id": "48051",
  "room": {
    "title": "Room 8",
    "id": "4711"
  },
  "speakers": [
    {
      "id": "47951",
      "companyName": "Agile Developer, Inc.",
      "fullName": "Venkat Subramaniam",
      "photoUrl": "https://devoxxian-image-thumbnails.s3-eu-west-1.amazonaws.com/profile-venkat_s.jpg"
    }
  ],
  "title": "Design Patterns Revisited in Modern Java",
  "description": "<p>Design Patterns are common ways to solve problems that developers have discovered over time. They often fill the gaps between the language capabilities and the design goals. When languages mature, sometimes patterns become natural features of languages and blend in to the natural way of writing code instead of a special effort. Java has evolved significantly over the years. In this session we'll revisit some common design problems and see how patterns are realized to solve those problems with the modern capabilities in Java.</p>",
  "language": "EN"
}