{
  "track": {
    "title": "Architecture",
    "id": "1251"
  },
  "format": {
    "title": "BOF",
    "duration": "PT60m",
    "id": "954"
  },
  "language": "EN",
  "room": {
    "id": "4701",
    "title": "BOF 1"
  },
  "id": "20739",
  "speakers": [
    {
      "fullName": "Philipp Krenn",
      "photoUrl": "https://devoxxian-image-thumbnails.s3-eu-west-1.amazonaws.com/profile-b00c0de6-c54a-42d9-addf-be06ad15c577.jpg",
      "id": "20587",
      "companyName": "Elastic"
    }
  ],
  "title": "Java under the Hood of Elasticsearch",
  "summary": "",
  "description": "<p>Elasticsearch is one of the most widely used Java projects out there. While many people know the REST interface and how to use it, this talk takes a look under the hood and picks up some of the more interesting Java topics there:</p><ul><li>Why and how Elasticsearch is always bundling the latest JDK with the default binary; also what lessons can be learned from Docker to Java distributions issues.</li><li>What Java features is Elasticsearch (not) using; also what are the requirements for building / testing and running.</li><li>While the Java Security Manager served Elasticsearch extremely well for Log4Shell and other security issues, what are the next steps after its deprecation to replace it.</li><li>Elasticsearch's Gradle setup is a monster but a powerful one â€” how does it keep the developers productive and what are the most important changes around performance.</li></ul>"
}