{
  "summary": "In this talk, I want to give a very pragmatic approach on creating the architecture of a (new) system. And it's not only drawing boxes and lines or pitching some tool. It starts with a short but intense design phase and then validating and evolving the architecture from a running application using distributed tracing. This means the system itself will be the architecture! We will use Elastic Kubernetes Service on AWS with XRay as a practical example to explain and visualize the architecture of a",
  "speakers": [
    {
      "companyName": "BB Consulting",
      "fullName": "Bart Blommaerts",
      "id": "1865",
      "photoUrl": "https://avatars.githubusercontent.com/u/3988458?v=4"
    }
  ],
  "room": {
    "title": "Room 6",
    "id": "4708"
  },
  "title": "Distributed Tracing as Architecture",
  "id": "1915",
  "track": {
    "id": "1251",
    "title": "Architecture"
  },
  "description": "<p><span style=\"color: rgb(32, 33, 36);\">By now, we all know \"BDUF\" (Big Design Up Front) and \"NDUF\" (No Design Up Front) don't work when creating the architecture of a system. We need \"JEDUF\" (Just Enough Design Up Front) ... unfortunately, nobody knows what \"just enough\" is. But some vendors can probably sell you a tool for it ...</span></p><p><br></p><p><span style=\"color: rgb(32, 33, 36);\">In this talk, I want to give a very pragmatic approach on creating the architecture of a (new) system. And it's not only drawing boxes and lines or pitching some tool. It starts with a short but intense design phase and then validating and evolving the architecture from a running application using distributed tracing. This means the system itself will be the architecture! We will use Elastic Kubernetes Service on AWS with XRay as a practical example to explain and visualize the architecture of a cloud-born distributed system.</span></p>",
  "format": {
    "id": "45001",
    "title": "Lunch Talks",
    "duration": "PT40m"
  },
  "language": "EN"
}