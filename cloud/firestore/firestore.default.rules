rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function authenticated() { return request.auth.uid != null }
    function iAm(userId) { return request != null && request.auth != null && request.auth.uid == userId }
    function onlyAllowedUpdatedFields(allowedFieldNames) {
      return allowedFieldNames != null
        && request != null
        && request.resource != null
        && request.resource.data != null
        && resource != null
        && resource.data != null
        && resource.data.diff(request.resource.data) != null
        && resource.data.diff(request.resource.data).affectedKeys() != null
        && resource.data.diff(request.resource.data).affectedKeys().hasOnly(['userLastConnection'])
    }

    // By default, prevent reads & writes on any node
    match /{document=**} {
      allow read, write: if false;
    }
    match /event-family-tokens {
      allow read: if false;
      match /{document=**} {
        allow read: if false;
      }
    }
    match /events/{event} {
      allow read: if true;
      match /talksStats/{talkId} {
        allow read: if true;
      }
      match /days/{dayId} {
        allow read: if true;
      }
      match /event-descriptor/self {
        allow read: if true;
      }
      match /last-updates/self {
        allow read: if true;
      }
      match /organizer-space/{secretOrganizerToken} {
        allow get: if true;
        allow list: if false;
      }
      match /talks/{talkId} {
        allow read: if true;
        match /feedbacks-access/{secretFeedbackViewerToken} {
          allow get: if true;
          allow list: if false;
          match /feedbacks/{userPublicToken} {
          	allow read: if true;
          }
        }
      }
      match /talksStats/{talkId} {
      	allow read: if true;
      }
    }
    match /users/{userId} {
      allow list: if false;
    	allow get: if iAm(userId);
    	allow create: if false;
    	allow update: if iAm(userId) && onlyAllowedUpdatedFields(["userLastConnection"]);
      allow delete: if false;

      match /preferences/self {
        allow read, create, update: if iAm(userId);
        allow delete: if false;
      }
      match /tokens-wallet/self {
        allow read, create, update: if iAm(userId);
        allow delete: if false;
      }
      match /events/{eventId} {
        allow read, create, update: if iAm(userId);
        allow delete: if false;

        match /__computed/self {
          allow read, write: if fase;
        }
        match /talkNotes/{talkId} {
          allow read, create, update: if iAm(userId);
          allow delete: if false;
        }
        match /days/{dayId} {
          allow read, create, update: if iAm(userId);
          allow delete: if false;

          match /feedbacks/self {
            allow get, create, update: if iAm(userId);
            allow list, delete: if false;
          }
        }
      }
    }
  }
}
